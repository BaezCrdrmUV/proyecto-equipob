@page
@model ChangePassword


<body style="background-color: #292929;" >
  <div>
    <h1 style="align-items: top; margin-left: 45%; font-size:31px;">Cambiar contraseña</h1>
  </div>
  
<form method="POST" id="changePasswords">
  <div class="container" style="margin-top: 2%;">
        <label for="password" class="label" style ="margin-left: 32.65%;"><b>*Contraseña:</b></label>
        <input  type="password" placeholder="Nueva Contraseña" name="username" minlenght="5" maxlength="20" id="passwordInput" required>

        <label for="passwordConfirm" class="label" style ="margin-left: 27.4%;"><b>*Confirmar contraseña:</b></label>
        <input type="password" placeholder="Repetir Contraseña" minlenght="5" maxlength="20" required id="passwordConfirmInput">

  </div>
</form>

<div>
    <label for="errorMessage" class="label" style ="margin-left: 36.5%; color: red;" id="errorMessage"></label>
</div>
    <button type="button" style ="margin-left: 30.5%; width: 39%; margin-top: 3%;" id="changePassword" onclick="passwordUpdate()">Actualizar</button>
    <button type="button" class="cancelbtn" style ="margin-left: 30%; width: 40%; margin-top: 1%;" id="cancelButton" onclick="cancelAction()">Cancelar</button>
</body>

<footer style="margin-top: 9.3%;"> 
    <div class="container">
            &copy; 2021 - SpotyMeWeb
    </div>
</footer>

<link rel="stylesheet" href="~/css/SpotyMe.css" />

@section Scripts {
<script>
    const cancelButton = document.getElementById("cancelButton");
    const updateInputButton= document.getElementById("changePassword");  
    const passwordInput = document.getElementById("passwordInput");
    const passwordConfirmInput = document.getElementById("passwordConfirmInput");
    const logErrorMessage= document.getElementById("errorMessage");
    const id = sessionStorage.getItem("id");
    const pswd = sessionStorage.getItem("passwordId");


    function passwordUpdate()
    {
        let passwordUpdate = 
        {
            "PasswordId": pswd,
            "PasswordString": hashText(passwordConfirmInput.value),
            "OwnerId": id
            
        }
        debugger;

        if(passwordInput.value.trim() != "" && passwordConfirmInput.value.trim() != "" 
        && passwordInput.value == passwordConfirmInput.value && passwordInput.value.length > 5 
        && passwordInput.value.length > 5)
        {
            let url = "http://localhost:4000/Account/UpdatePassword";
            fetch(url,{
            method: 'PUT',
            body: JSON.stringify(passwordUpdate),
            headers:{
            'Content-Type': 'application/json'
            }
            }).then(async function(response){
            console.log("Código de respuesta", response.status)
            if(response.status == 200)
            {
                debugger;
                let data = await response.json();
                console.log(data);
                if(data.success == true)
                {
                  alert("Se ha actualizado perfectamente la contraseña");
                  window.location.pathname = '/Profile'
                }
                else
                {
                    logErrorMessage.innerHTML = data.data.message;
                }
            }
            else
            {
                if(response.status == 500)
                {
                console.error("Error del servidor");
                }
                else
                {
                    console.error("Error de peticion");
                }
            }             
            debugger;
            })
            .catch(function(error){
                console.error(error);
            });
        }
        else
        {
            logErrorMessage.innerHTML = "Algunos campos estan incorrectos y/o vacios, verificar"
        }
    }

    passwordInput.addEventListener("focus", () => 
    {
        passwordInput.classList.remove("formulario__input-error");
    });

    passwordConfirmInput.addEventListener("focus", () => 
    {
        passwordConfirmInput.classList.remove("formulario__input-error");
    });

    function cancelAction()
    {
        window.location.pathname = '/Profile'
    }

    function hashText(text) 
    {
        if (typeof text != 'string') {
            throw TypeError('El argumento debe ser una cadena de caracteres.');
        }

        if (!text.length) {
            return null;
        }

        let caracteres = text.split('');

        return caracteres.reduce((h, c) => (h = c.charCodeAt(0) + (h << 6) + (h << 16) - h), 0);
    }

    
</script>
}